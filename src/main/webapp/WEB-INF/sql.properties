###
#PISTAS
###

#Creacion de una pista
crearPistaSTM=INSERT INTO PISTA (nombre, estado, dificultad, max_karts) VALUES (?, ?, ?, ?)

#Actualizar karts disponibles de una pista
actualizarPistaSTM=UPDATE PISTA SET asoc_karts_disp_infantiles=asoc_karts_disp_infantiles-?, asoc_karts_disp_adultos=asoc_karts_disp_adultos-? WHERE nombre=?

#Obtener pistas por su estado
obtenerPistasbyStateSTM=SELECT nombre, dificultad, max_karts, asoc_karts FROM PISTA WHERE estado=

#Comprobar si una pista existe
checkPistabyNombreSTM=SELECT EXISTS(SELECT * FROM PISTA WHERE nombre=

#Obtener pistas segun dificultad y numero de karts disponibles de cada tipo
obtenerPistasSTM=SELECT * FROM PISTA WHERE estado=1 AND dificultad=? AND asoc_karts_disp_infantiles>=? AND asoc_karts_disp_adultos>=?

#Cambio de estado de una pista
modificacionEstadoPistaSTM=UPDATE PISTA SET estado=? WHERE nombre=?

#Listado de todas las pistas
obtenerTodasPistasSTM=SELECT * FROM PISTA


###
#KARTS
###

#Creacion de un kart
crearKartSTM=INSERT INTO KART (tipo, estado) VALUES (?, ?)

#Actualizar pista de un kart
actualizarPistaKartSTM=UPDATE KART SET pista_asociada=? WHERE id=?

#Actualizar estado a reservado de un kart segun su tipo
actualizarEstadoKartReservaSTM=UPDATE KART SET estado=? WHERE tipo=? AND pista_asociada=? LIMIT ?

#Consultar karts sin asignar a pistas y que esten disponibles
obtenerKartDisponibleSTM=SELECT id, tipo, estado FROM KART WHERE pista_asociada IS NULL AND estado = 'DISPONIBLE'

#Consultar karts disponibles de una pista por su tipo
obtenerKartsPistaSTM=SELECT id, tipo FROM KART WHERE estado='DISPONIBLE' AND pista_asociada=

#Cambio de estado de un kart
modificacionEstadoKartSTM=UPDATE KART SET estado=? WHERE id=?

#Listado de todos los karts
obtenerTodosKartsSTM=SELECT * FROM KART

###
#USUARIOS
###

#Comrpobar usuario existe
usuarioSTM=SELECT EXISTS(SELECT * FROM USUARIO WHERE correo=?)

#Dar de alta a un usuario
altaUsuarioSTM=INSERT INTO USUARIO (correo, nombre, apellidos, fecha_Nacimiento, password, administrador, fecha_Inscripcion) VALUES (?, ?, ?, ?, ?, ?, ?)

#Eliminar usuario
eliminarUsuarioSTM=DELETE FROM USUARIO WHERE correo=?

#Obtener usuario por su correo
obtenerUsuariobyEmailSTM=SELECT * FROM USUARIO WHERE correo =

#Obtener todos los usuarios
obtenerUsuariosSTM=SELECT * FROM USUARIO

#Modificar usuarios
modificarUsuarioSTM=UPDATE USUARIO SET nombre=?, apellidos=?, fecha_Nacimiento=?, password=? WHERE correo=?

###
#RESERVAS
###

##ADMIN##

#Crear reservas individuales
crearReservaInfantilSTM=INSERT INTO RESERVA (usuario, modalidad_reserva, tipo_Reserva, participantes_infantiles, fecha, duracion, descuento, precio, pista ) VALUES (?, 'INDIVIDUAL', 'INFANTIL', ?, STR_TO_DATE(?, '%d/%m/%Y %H:%i'), ?, ?, ?, ?)
crearReservaFamiliarSTM=INSERT INTO RESERVA (usuario, modalidad_reserva, tipo_Reserva, participantes_infantiles, participantes_adultos, fecha, duracion, descuento, precio, pista ) VALUES (?, 'INDIVIDUAL', 'FAMILIAR', ?, ?, STR_TO_DATE(?, '%d/%m/%Y %H:%i'), ?, ?, ?, ?)
crearReservaAdultosSTM=INSERT INTO RESERVA (usuario, modalidad_reserva, tipo_Reserva, participantes_adultos, fecha, duracion, descuento, precio, pista ) VALUES (?, 'INDIVIDUAL', 'ADULTOS', ?, STR_TO_DATE(?, '%d/%m/%Y %H:%i'), ?, ?, ?, ?)

#Crear bono -- SIN USAR TODAVIA
crearBonoSTM=INSERT INTO BONO (id_Bono, usuario, fecha_caducidad) VALUES (?,?,?)

#Obtener ultimo id bono usado -- SIN USAR TODAVIA
obtenerIdBonoSTM=SELECT MAX(id_Bono) FROM BONO

#Borrar bono -- SIN USAR TODAVIA
borrarBonoSTM=DELETE FROM BONO WHERE id_Bono=

#Crear reservas bono
crearReservaInfantilBonoSTM=INSERT INTO RESERVA (usuario, id_Bono, modalidad_reserva, tipo_Reserva, participantes_infantiles, fecha, duracion, descuento, precio, pista ) VALUES (?, ?, 'BONO', 'INFANTIL', ?, STR_TO_DATE(?, '%d/%m/%Y'), ?, ?, ?, ?)
crearReservaFamiliarBonoSTM=INSERT INTO RESERVA (usuario, id_Bono, modalidad_reserva, tipo_Reserva, participantes_infantiles, participantes_adultos, fecha, duracion, descuento, precio, pista ) VALUES (?, ?, 'BONO', 'FAMILIAR', ?, ?, STR_TO_DATE(?, '%d/%m/%Y'), ?, ?, ?, ?)
crearReservaAdultosBonoSTM=INSERT INTO RESERVA (usuario, id_Bono, modalidad_reserva, tipo_Reserva, participantes_adultos, fecha, duracion, descuento, precio, pista ) VALUES (?, ?, 'BONO', 'ADULTOS', ?, ?, STR_TO_DATE(?, '%d/%m/%Y'), ?, ?, ?)

#Borrar reserva bono -- SIN USAR TODAVIA
cancelarReservaBonoSTM=DELETE FROM RESERVA WHERE DATE(fecha) > CURDATE() AND id_Bono=

#Consultar todas las reservas sin realizar de cualquier usuario en un rango
obtenerReservasInfantilSTM=SELECT * FROM RESERVA WHERE tipo_reserva='INFANTIL' AND fecha > NOW() AND fecha BETWEEN ? AND ? 
obtenerReservasFamiliarSTM=SELECT * FROM RESERVA WHERE tipo_reserva='FAMILIAR' AND fecha > NOW() AND fecha BETWEEN ? AND ?
obtenerReservasAdultosSTM=SELECT * FROM RESERVA WHERE tipo_reserva='ADULTOS' AND fecha > NOW() AND fecha BETWEEN ? AND ?

#Consultar todas las reservas sin realizar de cualquier usuario en un rango a partir de mañana
obtenerReservasInfantilRangobyFechaSTM=SELECT * FROM RESERVA WHERE tipo_reserva='INFANTIL' AND fecha >= (NOW() + INTERVAL 1 DAY) AND fecha BETWEEN ? AND ? 
obtenerReservasFamiliarRangobyFechaSTM=SELECT * FROM RESERVA WHERE tipo_reserva='FAMILIAR' AND fecha >= (NOW() + INTERVAL 1 DAY) AND fecha BETWEEN ? AND ? 
obtenerReservasAdultosRangobyFechaSTM=SELECT * FROM RESERVA WHERE tipo_reserva='ADULTOS' AND fecha >= (NOW() + INTERVAL 1 DAY) AND fecha BETWEEN ? AND ? 

##USUARIO##
###########

#Consultar reservas de un usuario a partir de mañana
obtenerReservasInfantilbyFechaSTM=SELECT * FROM RESERVA WHERE tipo_reserva='INFANTIL' AND fecha >= (NOW() + INTERVAL 1 DAY) AND usuario=
obtenerReservasFamiliarbyFechaSTM=SELECT * FROM RESERVA WHERE tipo_reserva='FAMILIAR' AND fecha >= (NOW() + INTERVAL 1 DAY) AND usuario=
obtenerReservasAdultosbyFechaSTM=SELECT * FROM RESERVA WHERE tipo_reserva='ADULTOS' AND fecha >= (NOW() + INTERVAL 1 DAY) AND usuario=

#Consultar reservas de un usuario en un rango de fechas
obtenerReservasInfantilRangoSTM=SELECT * FROM RESERVA WHERE tipo_Reserva='INFANTIL' AND usuario=? AND fecha BETWEEN ? AND ? ORDER BY fecha desc
obtenerReservasFamiliarRangoSTM=SELECT * FROM RESERVA WHERE tipo_Reserva='FAMILIAR' AND usuario=? AND fecha BETWEEN ? AND ? ORDER BY fecha desc
obtenerReservasAdultosRangoSTM=SELECT * FROM RESERVA WHERE tipo_Reserva='ADULTOS' AND usuario=? AND fecha BETWEEN ? AND ? ORDER BY fecha desc

#Consultar si existe alguna reserva de un usuario en el rango [fechaNuevaReserva - 2 horas, fechaNuevaReserva]
obtenerReservaSTM=SELECT EXISTS (SELECT * FROM RESERVA WHERE usuario=? AND fecha BETWEEN (? - INTERVAL 2 HOUR) AND ?)

#Consultar proxima reserva usuario
obtenerReservaProximaSTM=SELECT fecha FROM RESERVA WHERE usuario=? AND fecha >= NOW() LIMIT 1

#Borrar reserva individual
cancelarReservaSTM=DELETE FROM RESERVA WHERE id_Reserva=?

#Modificar reserva -- SIN USAR TODAVIA
modificarResevervaInfantilSTM=UPDATE RESERVA SET participantes_infantiles=?, fecha=?, duracion=?, pista=? WHERE usuario=? AND fecha=?
modificarResevervaFamiliarSTM=UPDATE RESERVA SET participantes_infantiles=?, participantes_adultos=?, fecha=?, duracion=?, pista=? WHERE usuario=? AND fecha=?
modificarResevervaAdultosSTM=UPDATE RESERVA SET participantes_adultos=?, fecha=?, duracion=?, pista=? WHERE usuario=? AND fecha=?

#
#Consultar reservas por fecha y pista -- SIN USAR TODAVIA
obtenerReservasInfantilbyFechaPistaSTM=SELECT * FROM RESERVA WHERE tipo_reserva='INFANTIL' AND DATE(fecha) > 
obtenerReservasFamiliarbyFechaPistaSTM=SELECT * FROM RESERVA WHERE tipo_reserva='FAMILIAR' AND DATE(fecha) >
obtenerReservasAdultosbyFechaPistaSTM=SELECT * FROM RESERVA WHERE tipo_reserva='ADULTOS' AND DATE(fecha) >

#Consultar bonos de usuario -- SIN USAR TODAVIA
obtenerBonoByUsuarioSTM=SELECT id_Bono FROM BONO WHERE usuario=

#Consultar reservas individuales por usuario -- SIN USAR TODAVIA
obtenerReservasIndividualesbyUsuarioSTM=SELECT (id_Reserva, tipo_Reserva



