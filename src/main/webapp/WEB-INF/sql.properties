###
#PISTAS
###

#Creacion de una pista
crearPistaSTM=INSERT INTO PISTA (nombre, estado, dificultad, max_karts) VALUES (?, ?, ?, ?)

#Actualizar karts disponibles de una pista
actualizarPistaSTM=UPDATE PISTA SET asoc_karts_disp_infantiles=asoc_karts_disp_infantiles-?, asoc_karts_disp_adultos=asoc_karts_disp_adultos-? WHERE nombre=?

#Comprobar si una pista existe
checkPistabyNombreSTM=SELECT EXISTS(SELECT * FROM PISTA WHERE nombre=

#Obtener pistas disponibles que se pueda asignar un kart
obtenerPistasAsignacionSTM=SELECT * FROM PISTA WHERE estado=1 AND (asoc_karts_disp_infantiles+asoc_karts_disp_adultos) < max_karts

#Obtener pistas segun dificultad
obtenerPistasbyDifSTM=SELECT * FROM PISTA WHERE estado=1 AND dificultad=

#Obtener pistas segun numero de karts disponibles de cada tipo
obtenerPistasByMinKartsSTM=SELECT * FROM PISTA WHERE estado=1 AND asoc_karts_disp_infantiles>=? AND asoc_karts_disp_adultos>=?

#Obtener pistas segun dificultad y numero de karts disponibles de cada tipo
obtenerPistasSTM=SELECT * FROM PISTA WHERE estado=1 AND dificultad=? AND asoc_karts_disp_infantiles>=? AND asoc_karts_disp_adultos>=?

#Cambio de estado de una pista
modificacionEstadoPistaSTM=UPDATE PISTA SET estado=? WHERE nombre=?

#Listado de todas las pistas
obtenerTodasPistasSTM=SELECT * FROM PISTA


###
#KARTS
###

#Creacion de un kart
crearKartSTM=INSERT INTO KART (tipo, estado) VALUES (?, ?)

#Actualizar pista de un kart
actualizarPistaKartSTM=UPDATE KART SET pista_asociada=? WHERE id=?

#Actualizar pista de un kart a NULL
actualizarPistaKartNullSTM=UPDATE KART SET pista_asociada=NULL WHERE id=?

#Actualizar estado a de un kart segun su tipo, su pista asociada y un numero limitado
actualizarEstadoKartReservaSTM=UPDATE KART SET estado=? WHERE tipo=? AND pista_asociada=? LIMIT ?

#Consultar karts sin asignar a pistas y que esten disponibles
obtenerKartDisponibleSTM=SELECT id, tipo, estado FROM KART WHERE pista_asociada IS NULL AND estado = 'DISPONIBLE'

#Consultar karts disponibles de una pista por su tipo
obtenerKartsPistaSTM=SELECT id, tipo FROM KART WHERE estado='DISPONIBLE' AND pista_asociada=

#Cambio de estado de un kart
modificacionEstadoKartSTM=UPDATE KART SET estado=? WHERE id=?

#Listado de todos los karts
obtenerTodosKartsSTM=SELECT * FROM KART

###
#USUARIOS
###

#Comrpobar usuario existe
usuarioSTM=SELECT EXISTS(SELECT * FROM USUARIO WHERE correo=?)

#Dar de alta a un usuario
altaUsuarioSTM=INSERT INTO USUARIO (correo, nombre, apellidos, fecha_Nacimiento, password, administrador, fecha_Inscripcion) VALUES (?, ?, ?, ?, ?, ?, ?)

#Eliminar usuario
eliminarUsuarioSTM=DELETE FROM USUARIO WHERE correo=?

#Obtener usuario por su correo
obtenerUsuariobyEmailSTM=SELECT * FROM USUARIO WHERE correo =

#Obtener todos los usuarios
obtenerUsuariosSTM=SELECT * FROM USUARIO

#Modificar usuario
modificarUsuarioSTM=UPDATE USUARIO SET nombre=?, apellidos=?, fecha_Nacimiento=?, password=? WHERE correo=?

###
#RESERVAS
###

#Crear reservas individuales
crearReservaInfantilSTM=INSERT INTO RESERVA (usuario, modalidad_reserva, tipo_Reserva, participantes_infantiles, fecha, duracion, descuento, precio, pista ) VALUES (?, 'INDIVIDUAL', 'INFANTIL', ?, STR_TO_DATE(?, '%d/%m/%Y %H:%i'), ?, ?, ?, ?)
crearReservaFamiliarSTM=INSERT INTO RESERVA (usuario, modalidad_reserva, tipo_Reserva, participantes_infantiles, participantes_adultos, fecha, duracion, descuento, precio, pista ) VALUES (?, 'INDIVIDUAL', 'FAMILIAR', ?, ?, STR_TO_DATE(?, '%d/%m/%Y %H:%i'), ?, ?, ?, ?)
crearReservaAdultosSTM=INSERT INTO RESERVA (usuario, modalidad_reserva, tipo_Reserva, participantes_adultos, fecha, duracion, descuento, precio, pista ) VALUES (?, 'INDIVIDUAL', 'ADULTOS', ?, STR_TO_DATE(?, '%d/%m/%Y %H:%i'), ?, ?, ?, ?)

#Crear bono
crearBonoSTM=INSERT INTO BONO (usuario, tipo_Bono) VALUES (?,?)

#Obtener bono por ID
consultarBonoSTM=SELECT * FROM BONO WHERE id_Bono=?

#Actualizar fecha caducidad de un bono
actualizarFechaBonoSTM=UPDATE BONO SET fecha_caducidad=STR_TO_DATE(?, '%Y-%m-%dT%H:%i') + INTERVAL 1 YEAR WHERE id_Bono=?

#Actualizar numero sesiones bono
actualizarSesionesBonoSTM=UPDATE BONO SET numero_sesiones=numero_sesiones+? WHERE id_Bono=?

#Consultar bonos de usuario
obtenerBonoByUsuarioSTM=SELECT * FROM BONO WHERE usuario=

#Consultar ID bono de una reserva
obtenerIDBonoSTM=SELECT id_Bono FROM RESERVA WHERE id_Reserva=?

#Borrar bono
borrarBonoSTM=DELETE FROM BONO WHERE id_Bono=

#Crear reservas bono
crearReservaInfantilBonoSTM=INSERT INTO RESERVA (usuario, id_Bono, modalidad_reserva, tipo_Reserva, participantes_infantiles, fecha, duracion, descuento, precio, pista ) VALUES (?, ?, 'BONO', 'INFANTIL', ?, STR_TO_DATE(?, '%d/%m/%Y %H:%i'), ?, ?, ?, ?)
crearReservaFamiliarBonoSTM=INSERT INTO RESERVA (usuario, id_Bono, modalidad_reserva, tipo_Reserva, participantes_infantiles, participantes_adultos, fecha, duracion, descuento, precio, pista ) VALUES (?, ?, 'BONO', 'FAMILIAR', ?, ?, STR_TO_DATE(?, '%d/%m/%Y %H:%i'), ?, ?, ?, ?)
crearReservaAdultosBonoSTM=INSERT INTO RESERVA (usuario, id_Bono, modalidad_reserva, tipo_Reserva, participantes_adultos, fecha, duracion, descuento, precio, pista ) VALUES (?, ?, 'BONO', 'ADULTOS', ?, STR_TO_DATE(?, '%d/%m/%Y %H:%i'), ?, ?, ?, ?)

#Borrar reserva bono -- SIN USAR TODAVIA
cancelarReservaBonoSTM=DELETE FROM RESERVA WHERE DATE(fecha) > CURDATE() AND id_Bono=

#Consultar todas las reservas sin realizar de cualquier usuario en un rango
obtenerReservasInfantilSTM=SELECT * FROM RESERVA WHERE tipo_reserva='INFANTIL' AND fecha > NOW() AND fecha BETWEEN ? AND ? 
obtenerReservasFamiliarSTM=SELECT * FROM RESERVA WHERE tipo_reserva='FAMILIAR' AND fecha > NOW() AND fecha BETWEEN ? AND ?
obtenerReservasAdultosSTM=SELECT * FROM RESERVA WHERE tipo_reserva='ADULTOS' AND fecha > NOW() AND fecha BETWEEN ? AND ?

#Consultar todas las reservas sin realizar de cualquier usuario en un rango a partir de mañana
obtenerReservasInfantilRangobyFechaSTM=SELECT * FROM RESERVA WHERE tipo_reserva='INFANTIL' AND fecha >= (NOW() + INTERVAL 1 DAY) AND modalidad_reserva=? AND fecha BETWEEN ? AND ? 
obtenerReservasFamiliarRangobyFechaSTM=SELECT * FROM RESERVA WHERE tipo_reserva='FAMILIAR' AND fecha >= (NOW() + INTERVAL 1 DAY) AND modalidad_reserva=? AND fecha BETWEEN ? AND ? 
obtenerReservasAdultosRangobyFechaSTM=SELECT * FROM RESERVA WHERE tipo_reserva='ADULTOS' AND fecha >= (NOW() + INTERVAL 1 DAY) AND modalidad_reserva=? AND fecha BETWEEN ? AND ? 

#Consultar reservas de un usuario a partir de mañana
obtenerReservasInfantilbyFechaSTM=SELECT * FROM RESERVA WHERE tipo_reserva='INFANTIL' AND fecha >= (NOW() + INTERVAL 1 DAY) AND modalidad_reserva=? AND usuario=?
obtenerReservasFamiliarbyFechaSTM=SELECT * FROM RESERVA WHERE tipo_reserva='FAMILIAR' AND fecha >= (NOW() + INTERVAL 1 DAY) AND modalidad_reserva=? AND usuario=?
obtenerReservasAdultosbyFechaSTM=SELECT * FROM RESERVA WHERE tipo_reserva='ADULTOS' AND fecha >= (NOW() + INTERVAL 1 DAY) AND modalidad_reserva=? AND usuario=?

#Consultar reservas de un usuario en un rango de fechas
obtenerReservasInfantilRangoSTM=SELECT * FROM RESERVA WHERE tipo_Reserva='INFANTIL' AND usuario=? AND fecha BETWEEN ? AND ? ORDER BY fecha desc
obtenerReservasFamiliarRangoSTM=SELECT * FROM RESERVA WHERE tipo_Reserva='FAMILIAR' AND usuario=? AND fecha BETWEEN ? AND ? ORDER BY fecha desc
obtenerReservasAdultosRangoSTM=SELECT * FROM RESERVA WHERE tipo_Reserva='ADULTOS' AND usuario=? AND fecha BETWEEN ? AND ? ORDER BY fecha desc

#Consultar si existe alguna reserva de un usuario en el rango [fechaNuevaReserva - 2 horas, fechaNuevaReserva]
obtenerReservaSTM=SELECT EXISTS (SELECT * FROM RESERVA WHERE usuario=? AND fecha BETWEEN (? - INTERVAL 2 HOUR) AND ?)

#Consultar proxima reserva usuario
obtenerReservaProximaSTM=SELECT * FROM RESERVA WHERE usuario=? AND fecha >= NOW() ORDER BY fecha ASC LIMIT 1

#Consultar numero de reservas completadas en total
obtenerReservasCompletadasSTM=SELECT COUNT(*) FROM RESERVA WHERE fecha + INTERVAL 2 HOUR <= NOW()

#Consultar numero de reservas completadas por usuario
obtenerReservasCompletadasUsuarioSTM=SELECT COUNT(*) FROM RESERVA WHERE fecha + INTERVAL 2 HOUR <= NOW() AND usuario=

#Consultar ID de la ultima reserva que se obtenga a partir de la pista asociada y el tipo de reserva
obtenerUltimaReservaIDSTM=SELECT * FROM RESERVA WHERE pista=? ORDER BY fecha DESC LIMIT 1

#Actualizar numero de participantes de una reserva a partir del ID
actualizarReservabyIDSTM=UPDATE RESERVA SET participantes_infantiles=participantes_infantiles-?, participantes_adultos=participantes_adultos-? WHERE id_Reserva=?

#Borrar reserva
cancelarReservaSTM=DELETE FROM RESERVA WHERE id_Reserva=?

#Modificar reserva -- SIN USAR TODAVIA
modificarResevervaInfantilSTM=UPDATE RESERVA SET participantes_infantiles=?, fecha=?, duracion=?, pista=? WHERE id_Reserva=?
modificarResevervaFamiliarSTM=UPDATE RESERVA SET participantes_infantiles=?, participantes_adultos=?, fecha=?, duracion=?, pista=? WHERE id_Reserva=?
modificarResevervaAdultosSTM=UPDATE RESERVA SET participantes_adultos=?, fecha=?, duracion=?, pista=? WHERE id_Reserva=?
